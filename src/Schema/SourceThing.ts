import { column, FormatToRow, StringToType } from "./Common";

const SourceThingFormat = {
    id            : column(0 ,'string')  ,
    name_JP       : column(1 ,'string')  ,
    unknown_JP    : column(2 ,'string')  ,
    unit_JP       : column(3 ,'string')  ,
    naming        : column(4 ,'string')  ,
    name          : column(5 ,'string')  ,
    unit          : column(6 ,'string')  ,
    unknown       : column(7 ,'string')  ,
    category      : column(8 ,'string')  ,
    sort          : column(9 ,'int')     ,
    _tileType     : column(10,'string')  ,
    _idRenderData : column(11,'string')  ,
    tiles         : column(12,'int[]')   ,
    altTiles      : column(13,'int[]')   ,
    anime         : column(14,'int[]')   ,
    skins         : column(15,'int[]')   ,
    size          : column(16,'int[]')   ,
    colorMod      : column(17,'int[]')   ,
    colorType     : column(18,'int[]')   ,
    recipeKey     : column(19,'string')  ,
    factory       : column(20,'string[]'),
    components    : column(21,'string[]'),
    disassemble   : column(22,'string[]'),
    defMat        : column(23,'string[]'),
    tierGroup     : column(24,'string')  ,
    value         : column(25,'int')     ,
    LV            : column(26,'int')     ,
    chance        : column(27,'int')     ,
    quality       : column(28,'int')     ,
    HP            : column(29,'int')     ,
    weight        : column(30,'int')     ,
    electricity   : column(31,'int')     ,
    trait         : column(32,'string[]'),
    elements      : column(33,'string[]'),
    range         : column(34,'int')     ,
    attackType    : column(35,'string')  ,
    offense       : column(36,'int[]')   ,
    substats      : column(37,'int[]')   ,
    defense       : column(38,'int[]')   ,
    lightData     : column(39,'string')  ,
    idExtra       : column(40,'string')  ,
    idToggleExtra : column(41,'string')  ,
    idActorEx     : column(42,'string')  ,
    idSound       : column(43,'string')  ,
    tag           : column(44,'string')  ,
    workTag       : column(45,'string[]'),
    filter        : column(46,'string')  ,
    roomName_JP   : column(47,'string')  ,
    roomName      : column(48,'string')  ,
    detail_JP     : column(49,'string')  ,
    detail        : column(50,'string')  ,
};

type SourceThingFormat = typeof SourceThingFormat;

type SourceThingRow = FormatToRow<SourceThingFormat>;

export type SourceThingTable = SourceThingRow[];
